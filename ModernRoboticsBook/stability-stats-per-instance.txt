Stability.ModuleStatsPerInstanceRecord[Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normInf", true, true, 4, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 444), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matmatmul!", true, true, 23, 4, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 713), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", false, false, 2, 1, "Any", "AbstractArray{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_rmul_or_fill!", true, true, 3, 2, "Array{Float64,1}", "Array{Float64,1},Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 90), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "nrm2", true, true, 0, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 419), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float64,2},SubArray{Float64,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float64,2},Base.ReshapedArray{Float64,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "diagind", true, true, 1, 2, "StepRange{Int64,Int64}", "Int64,Int64,Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 200), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normMinusInf", true, true, 4, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 431), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm_sqr", true, true, 0, 1, "Float64", "Float64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 473), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "VecToso3", true, true, 0, 1, "Array{Int64,2}", "Array{Int64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 121), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normMinusInf", true, true, 0, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 535), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "Base.ReinterpretArray{Complex{Float32},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul2x2!", true, true, 13, 1, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 914), Stability.ModuleStatsPerInstanceRecord("SparseArrays", "promote_to_array_type", true, true, 0, 1, "Type{Array{T,2} where T}", "Tuple{LinearAlgebra.UniformScaling{Bool},Array{Float64,1}}", "/build/source/usr/share/julia/stdlib/v1.5/SparseArrays/src/sparsevector.jl", 1065), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Float64,1}", "Array{Float64,1},Array{Float64,2},Array{Float64,1},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 66), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "chkargsok", true, true, 1, 1, "Nothing", "Int32", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 25), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "syrk!", true, true, 5, 1, "Array{Float64,2}", "Char,Char,Float64,Array{Float64,2},Float64,Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 1585), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "lapack_size", true, true, 4, 1, "Tuple{Int64,Int64}", "Char,Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 605), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float64,2},Base.ReshapedArray{Float64,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normMinusInf", true, true, 0, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 535), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "RpToTrans", true, true, 0, 1, "Array{Int64,2}", "Array{Int64,2},Array{Int64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 231), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm2", true, true, 14, 3, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 476), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 0, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "DistanceToSO3", true, true, 1, 2, "Float64", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 477), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, true, 0, 1, "Bool", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "RpToTrans", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},Array{Float64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 231), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normp", true, true, 24, 3, "Float64", "Array{Int64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 504), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matprod", true, true, 0, 1, "Float64", "Float64,Float64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 5), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "#lu!#132", true, true, 3, 1, "LinearAlgebra.LU{Float64,Array{Float64,2}}", "Bool,typeof(LinearAlgebra.lu!),Array{Float64,2},Val{true}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lu.jl", 79), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "Base.ReinterpretArray{Float64,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normMinusInf", true, true, 4, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 431), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 2, 3, "Float64", "Int64,Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 647), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "potrf!", false, false, 1, 2, "Union{Tuple{Array{Float64,2},Int32}, Tuple{Array{Float64,2},Int64}}", "Char,Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 3050), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_rmul_or_fill!", true, false, 3, 2, "Array{Float64,2}", "Array{Float64,2},Number", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 90), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "AxisAng3", true, true, 0, 1, "Tuple{Array{Float64,1},Float64}", "Array{Int64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 156), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm2", true, true, 14, 3, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 476), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normInf", true, true, 4, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 444), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReinterpretArray{Complex{Float32},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matprod", true, true, 0, 1, "Float64", "Float64,Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 5), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "NearZero", true, true, 0, 1, "Bool", "Int64", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 69), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Int64,2}", "Array{Int64,2},Array{Int64,2},Array{Int64,2},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 235), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, true, 1, 1, "Nothing", "LinearAlgebra.MulAddMul{true,true,Bool,Bool},Int64,Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float64,2},Base.ReinterpretArray{Float64,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "rmul!", true, true, 5, 1, "Array{Float64,2}", "Array{Float64,2},Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 161), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "orghr!", false, false, 5, 1, "AbstractArray{Complex{Float32},2}", "Int64,Integer,AbstractArray{Complex{Float32},2},StridedArray{Complex{Float32}, 1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 5597), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "orghr!", false, false, 5, 1, "AbstractArray{Complex{Float64},2}", "Int64,Integer,AbstractArray{Complex{Float64},2},StridedArray{Complex{Float64}, 1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 5597), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul3x3!", true, true, 13, 1, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 957), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copy_transpose!", true, true, 4, 1, "Array{Float64,2}", "Array{Float64,2},UnitRange{Int64},UnitRange{Int64},Char,Array{Float64,2},UnitRange{Int64},UnitRange{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 617), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm_sqr", true, true, 0, 1, "Float64", "Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 474), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float64},2},Base.ReshapedArray{Complex{Float64},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "@blasfunc", true, false, 0, 1, "Expr", "LineNumberNode,Module,Any", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 102), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", false, false, 2, 1, "Any", "AbstractArray{Float32,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normp", true, true, 0, 1, "Float64", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 539), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "TransInv", true, true, 0, 1, "Array{Int64,2}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 261), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "asum", true, true, 0, 1, "Float64", "Int64,Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 445), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float64,2},Base.ReinterpretArray{Float64,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "istril", true, true, 0, 1, "Bool", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1309), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normInf", true, true, 0, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 536), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "eigtype", true, true, 0, 1, "Type{Float64}", "Type{Float64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/eigen.jl", 302), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "MatrixExp3", false, false, 1, 2, "Union{LinearAlgebra.UniformScaling{Bool}, Array{Float64,2}}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 172), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matprod", true, true, 0, 1, "Int64", "Int64,Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 5), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "transpose", true, true, 0, 1, "LinearAlgebra.Transpose{Float64,Array{Float64,2}}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 161), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float32,2},SubArray{Float32,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float64,2},SubArray{Float64,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_rmul_or_fill!", true, false, 3, 2, "Array{Int64,2}", "Array{Int64,2},Number", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 90), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul2x2!", true, false, 13, 1, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 914), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float64,2},DenseArray{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "gemv!", true, true, 15, 1, "Array{Float64,1}", "Char,Float64,Array{Float64,2},Array{Float64,1},Float64,Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 613), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, true, 1, 1, "Nothing", "LinearAlgebra.MulAddMul{true,true,Bool,Bool},Float64,Array{Float64,2},Tuple{Int64,Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Float32,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "isstructurepreserving", true, false, 0, 1, "Bool", "typeof(-),Vararg{Any,N} where N", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 105), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float64},2},DenseArray{Complex{Float64},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},LinearAlgebra.Adjoint{Float64,Array{Float64,2}},Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 207), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copy_transpose!", true, true, 10, 1, "Array{Int64,2}", "Array{Int64,2},UnitRange{Int64},UnitRange{Int64},Array{Int64,2},UnitRange{Int64},UnitRange{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/transpose.jl", 181), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "fzeropreserving", false, false, 1, 2, "Any", "Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{T},Axes,F,Args} where Args<:Tuple where F where Axes where T", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 109), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 0, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float32,2},Base.ReinterpretArray{Float32,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "asum", true, true, 0, 1, "Float64", "Int64,Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 445), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normp", true, true, 0, 1, "Float64", "Array{Int64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 539), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "tr", true, true, 3, 1, "Int64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 330), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Float64,1}", "Array{Float64,1},Array{Float64,2},Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 207), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normp", true, true, 24, 3, "Float64", "Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 504), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float64},2},Base.ReinterpretArray{Complex{Float64},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matvecmul!", true, false, 41, 1, "Array{Float64,1}", "Array{Float64,1},Char,Array{Float64,2},Array{Float64,1},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 633), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float32},2},SubArray{Complex{Float32},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 0, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "istriu", true, true, 8, 2, "Bool", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1267), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "TransToRp", true, true, 0, 1, "Tuple{Array{Int64,2},Array{Int64,1}}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 244), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normMinusInf", true, true, 0, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 535), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "SubArray{Float64,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float32},2},DenseArray{Complex{Float32},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReshapedArray{Float32,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float32,2},Base.ReshapedArray{Float32,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "ipiv2perm", true, true, 3, 1, "Array{Int32,1}", "Array{Int32,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lu.jl", 296), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normp", true, true, 24, 3, "Float64", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 504), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Complex{Float64},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_generic_matmatmul!", true, false, 151, 2, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 734), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normp", true, true, 24, 3, "Float64", "Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 504), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm1", true, true, 4, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 457), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "SubArray{Float32,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 6, 7, "Float64", "Array{Int64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 6, 7, "Float64", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normInf", true, true, 0, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 536), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "SubArray{Complex{Float64},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "AbstractArray{Float32,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Complex{Float64},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "promote_to_arrays", true, true, 0, 1, "Tuple{Array{Bool,2},Array{Float64,1}}", "Array{Int64,1},Int64,Type{Array{T,2} where T},LinearAlgebra.UniformScaling{Bool},Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/uniformscaling.jl", 340), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float32},2},Base.ReshapedArray{Complex{Float32},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float64},2},Base.ReinterpretArray{Complex{Float64},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "gemm!", true, true, 13, 1, "Array{Float64,2}", "Char,Char,Float64,Array{Float64,2},Array{Float64,2},Float64,Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 1355), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul3x3!", true, true, 13, 1, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 957), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "include", false, false, 0, 1, "Any", "String", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 8), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,DenseArray{Complex{Float64},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float32,2},Base.ReshapedArray{Float32,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, false, 2, 1, "Nothing", "LinearAlgebra.MulAddMul,Float64,Array{Float64,2},Tuple{Int64,Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "lutype", true, true, 0, 1, "Type{Float64}", "Type{Float64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lu.jl", 182), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float32,2},SubArray{Float32,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_rmul_or_fill!", true, true, 3, 2, "Array{Float64,2}", "Array{Float64,2},Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 90), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "promote_to_arrays_", true, true, 0, 1, "Array{Bool,2}", "Int64,Type{Array{T,2} where T},LinearAlgebra.UniformScaling{Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/uniformscaling.jl", 336), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Complex{Float32},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normInf", true, true, 4, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 444), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "det", true, true, 3, 2, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1533), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "ScrewToAxis", true, true, 0, 1, "Array{Int64,1}", "Array{Int64,1},Array{Int64,1},Int64", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 343), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm1", true, true, 4, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 457), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm1", true, true, 4, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 457), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, false, 2, 1, "Nothing", "LinearAlgebra.MulAddMul,Float64,Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Complex{Float32},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "tril!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 423), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copy_transpose!", true, true, 10, 1, "Array{Float64,2}", "Array{Float64,2},UnitRange{Int64},UnitRange{Int64},Array{Float64,2},UnitRange{Int64},UnitRange{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/transpose.jl", 181), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},LinearAlgebra.Adjoint{Float64,Array{Float64,2}},Array{Float64,2},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 374), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Complex{Float64},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "issuccess", true, true, 0, 1, "Bool", "LinearAlgebra.LU{Float64,Array{Float64,2}}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lu.jl", 325), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "det", true, true, 0, 1, "Float64", "LinearAlgebra.UpperTriangular{Float64,Array{Float64,2}}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/triangular.jl", 2654), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "nrm2", true, true, 0, 1, "Float64", "Int64,Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 412), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", false, false, 2, 1, "Any", "AbstractArray{Complex{Float32},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, true, 1, 1, "Nothing", "LinearAlgebra.MulAddMul{true,true,Bool,Bool},Bool,Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "vendor", true, true, 0, 1, "Symbol", "", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 95), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm2", true, true, 1, 2, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 105), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,DenseArray{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", true, true, 2, 1, "Int64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 6, 7, "Float64", "Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "asum", true, true, 0, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 452), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "isstructurepreserving", true, false, 0, 1, "Bool", "Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{T},Nothing,typeof(-),_B} where _B<:Tuple where T", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 98), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "syrk_wrapper!", true, true, 24, 5, "Array{Float64,2}", "Array{Float64,2},Char,Array{Float64,2},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 476), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "orghr!", false, false, 5, 1, "AbstractArray{Float32,2}", "Int64,Integer,AbstractArray{Float32,2},StridedArray{Float32, 1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 5597), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_iszero", false, false, 0, 1, "Any", "Number", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 107), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copy_transpose!", true, true, 4, 1, "Array{Int64,2}", "Array{Int64,2},UnitRange{Int64},UnitRange{Int64},Char,Array{Int64,2},UnitRange{Int64},UnitRange{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 617), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float32},2},Base.ReinterpretArray{Complex{Float32},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm1", true, true, 1, 2, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 102), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float32},2},Base.ReinterpretArray{Complex{Float32},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, true, 1, 1, "Nothing", "LinearAlgebra.MulAddMul{true,true,Bool,Bool},Int64,Array{Int64,2},Tuple{Int64,Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "MatrixLog6", true, true, 1, 2, "Array{Float64,2}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 410), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "gemm!", true, false, 13, 1, "Array{Float64,2}", "Char,Char,Union{Bool, Float64},Array{Float64,2},Array{Float64,2},Union{Bool, Float64},Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 1355), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", true, true, 2, 1, "Int64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "det", true, true, 8, 2, "Float64", "LinearAlgebra.LU{Float64,Array{Float64,2}}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lu.jl", 442), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm1", true, true, 4, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 457), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,SubArray{Complex{Float64},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "promote_leaf_eltypes", true, true, 0, 1, "Type{Int64}", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1623), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "AbstractArray{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 0, 1, "Float64", "Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 647), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "gemm_wrapper!", true, false, 34, 5, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 562), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,DenseArray{Complex{Float32},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 0, 1, "Float64", "Float64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 647), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normp", true, true, 0, 1, "Float64", "Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 539), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_generic_matmatmul!", true, true, 151, 2, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 734), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float32,2},DenseArray{Float32,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copyto!", true, true, 3, 1, "Array{Bool,2}", "Array{Bool,2},LinearAlgebra.UniformScaling{Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/uniformscaling.jl", 317), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "SubArray{Complex{Float32},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReshapedArray{Complex{Float32},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "NearZero", true, true, 0, 1, "Bool", "Float64", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 69), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_rmul_or_fill!", true, true, 3, 2, "Array{Int64,2}", "Array{Int64,2},Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 90), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "AbstractArray{Complex{Float64},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "wrapperop", true, true, 0, 1, "typeof(adjoint)", "LinearAlgebra.Adjoint{Int64,Array{Int64,2}}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 178), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float32},2},Base.ReshapedArray{Complex{Float32},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReshapedArray{Float64,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "diag", true, true, 0, 1, "Array{Float64,1}", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 246), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, false, 0, 1, "Int64", "Base.ReshapedArray{Complex{Float64},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checknonsingular", true, true, 1, 1, "Bool", "Int32,Val{true}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/factorization.jl", 19), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "Base.ReinterpretArray{Complex{Float64},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Int64,1}", "Array{Int64,1},LinearAlgebra.Adjoint{Int64,Array{Int64,2}},Array{Int64,1},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 126), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, false, 2, 1, "Nothing", "LinearAlgebra.MulAddMul,Bool,Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "#isapprox#18", true, true, 1, 2, "Bool", "Int64,Float64,Bool,typeof(LinearAlgebra.norm),typeof(isapprox),Array{Float64,2},Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1631), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "rmul!", true, false, 5, 1, "Array{Float64,2}", "Array{Float64,2},Number", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 161), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "asum", true, true, 0, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 452), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "fzero", false, false, 1, 2, "Any", "Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{T},Axes,F,Args} where Args<:Tuple where F where Axes where T", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 120), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "lapack_size", true, true, 4, 1, "Tuple{Int64,Int64}", "Char,Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 605), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "TestIfSE3", true, true, 0, 1, "Bool", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 523), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "Normalize", true, true, 0, 1, "Array{Float64,1}", "Array{Int64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 85), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normMinusInf", true, true, 0, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 535), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "cross", true, true, 3, 1, "Array{Int64,1}", "Array{Int64,1},Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 290), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normInf", true, true, 4, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 444), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, false, 2, 1, "Nothing", "LinearAlgebra.MulAddMul,Int64,Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normInf", true, true, 0, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 536), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copy_oftype", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},Type{Float64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 349), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copyto!", true, true, 4, 1, "Array{Float64,2}", "Array{Float64,2},UnitRange{Int64},UnitRange{Int64},Char,Array{Float64,2},UnitRange{Int64},UnitRange{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 607), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "gemm_wrapper!", true, true, 32, 5, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 562), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float64},2},SubArray{Complex{Float64},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},Array{Float64,2},Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 207), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normMinusInf", true, true, 4, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 431), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matvecmul!", true, true, 41, 1, "Array{Int64,1}", "Array{Int64,1},Char,Array{Int64,2},Array{Int64,1},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 633), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_normMinusInf", true, true, 4, 1, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 431), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "svd", true, true, 0, 1, "LinearAlgebra.SVD{Float64,Float64,Array{Float64,2}}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/svd.jl", 157), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float32},2},SubArray{Complex{Float32},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "MatrixExp6", true, true, 1, 2, "Array{Float64,2}", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 379), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "MatrixLog3", true, true, 6, 3, "Array{Float64,2}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm2", true, true, 1, 2, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 105), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "orghr!", false, false, 5, 1, "AbstractArray{Float64,2}", "Int64,Integer,AbstractArray{Float64,2},StridedArray{Float64, 1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 5597), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "isstructurepreserving", false, false, 0, 1, "Any", "Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{T},Axes,F,Args} where Args<:Tuple where F where Axes where T", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 98), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "getrf!", true, true, 0, 1, "Tuple{Array{Float64,2},Array{Int32,1},Int32}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 543), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matvecmul!", true, false, 41, 1, "Array{Int64,1}", "Array{Int64,1},Char,Array{Int64,2},Array{Int64,1},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 633), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "istril", true, true, 8, 2, "Bool", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1309), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReinterpretArray{Complex{Float64},1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Float32,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "ishermitian", true, true, 8, 3, "Bool", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1222), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Complex{Float32},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matmatmul!", true, false, 23, 4, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 713), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "istriu", true, true, 0, 1, "Bool", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1267), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "diagind", true, true, 0, 1, "StepRange{Int64,Int64}", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 220), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,DenseArray{Float32,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,SubArray{Float64,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "openblas_get_config", true, true, 0, 1, "SubString{String}", "", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 107), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "chkuplo", true, true, 3, 1, "Char", "Char", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 55), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "so3ToVec", true, true, 0, 1, "Array{Float64,1}", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 141), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "default_svd_alg", true, true, 0, 1, "LinearAlgebra.DivideAndConquer", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/svd.jl", 83), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "rmul!", true, false, 5, 1, "Array{Int64,2}", "Array{Int64,2},Number", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 161), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm1", true, true, 1, 2, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 102), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "rmul!", true, true, 5, 1, "Array{Int64,2}", "Array{Int64,2},Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 161), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReshapedArray{Complex{Float64},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "issymmetric", true, true, 0, 1, "Bool", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1157), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "rmul!", true, true, 5, 1, "Array{Float64,1}", "Array{Float64,1},Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 161), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Int64,1}", "Array{Int64,1},LinearAlgebra.Adjoint{Int64,Array{Int64,2}},Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 207), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 1, 2, "Array{Float64,2}", "Array{Float64,2},LinearAlgebra.Transpose{Float64,Array{Float64,2}},Array{Float64,2},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 304), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "gemv!", true, true, 8, 4, "Array{Float64,1}", "Array{Float64,1},Char,Array{Float64,2},Array{Float64,1},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 452), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "MatrixExp3", false, false, 1, 2, "Union{LinearAlgebra.UniformScaling{Bool}, Array{Float64,2}}", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 172), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "nrm2", true, true, 0, 1, "Float64", "Int64,Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 412), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "determine_vendor", true, true, 12, 1, "Symbol", "", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 76), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,SubArray{Complex{Float32},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float32,2},DenseArray{Float32,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul2x2!", true, true, 13, 1, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 914), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},Array{Float64,2},Array{Float64,2},Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 167), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "#isapprox#18", true, true, 1, 2, "Bool", "Int64,Float64,Bool,typeof(LinearAlgebra.norm),typeof(isapprox),Array{Float64,2},Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1631), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float32},2},DenseArray{Complex{Float32},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul3x3!", true, false, 13, 1, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 957), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checkeltype_adjoint", true, true, 1, 1, "Nothing", "Type{Int64},Type{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 74), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "#svd#85", true, true, 0, 1, "LinearAlgebra.SVD{Float64,Float64,Array{Float64,2}}", "Bool,LinearAlgebra.DivideAndConquer,typeof(LinearAlgebra.svd),Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/svd.jl", 157), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_svd!", true, true, 2, 1, "Tuple{Array{Float64,2},Array{Float64,1},Array{Float64,2}}", "Array{Float64,2},Bool,LinearAlgebra.DivideAndConquer", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/svd.jl", 105), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float64},2},SubArray{Complex{Float64},1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normp", true, true, 0, 1, "Float64", "Array{Int64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 539), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "#svd!#84", true, true, 6, 1, "LinearAlgebra.SVD{Float64,Float64,Array{Float64,2}}", "Bool,LinearAlgebra.DivideAndConquer,typeof(LinearAlgebra.svd!),Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/svd.jl", 93), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReinterpretArray{Float64,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Complex{Float32},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copyto!", true, true, 4, 1, "Array{Int64,2}", "Array{Int64,2},UnitRange{Int64},UnitRange{Int64},Char,Array{Int64,2},UnitRange{Int64},UnitRange{Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 607), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Float32,2},Base.ReinterpretArray{Float32,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "Adjoint", true, true, 0, 1, "Array{Float64,2}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 321), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "gesdd!", true, true, 18, 3, "Tuple{Array{Float64,2},Array{Float64,1},Array{Float64,2}}", "Char,Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 1605), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "so3ToVec", true, true, 0, 1, "Array{Int64,1}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 141), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "Array{Float32,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 198), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "AxisAng3", true, true, 0, 1, "Tuple{Array{Float64,1},Float64}", "Array{Float64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 156), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "adjoint", true, true, 0, 1, "LinearAlgebra.Adjoint{Float64,Array{Float64,2}}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 136), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.LAPACK", "chklapackerror", true, true, 2, 1, "Nothing", "Int32", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lapack.jl", 32), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matmatmul!", true, false, 23, 4, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 713), Stability.ModuleStatsPerInstanceRecord("SparseArrays", "copyto!", false, false, 0, 1, "Array{_A,2} where _A", "Array{_A,2} where _A,SparseArrays.AbstractSparseMatrixCSC", "/build/source/usr/share/julia/stdlib/v1.5/SparseArrays/src/sparsematrix.jl", 357), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, false, 0, 1, "Int64", "Base.ReshapedArray{Float32,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "triu!", true, true, 6, 1, "Array{Float64,2}", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 133), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Complex{Float64},2},Base.ReshapedArray{Complex{Float64},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "RotInv", true, true, 0, 1, "LinearAlgebra.Adjoint{Int64,Array{Int64,2}}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 105), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "check", true, false, 16, 1, "Nothing", "", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 134), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "adjoint", true, true, 0, 1, "LinearAlgebra.Adjoint{Int64,Array{Int64,2}}", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 136), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul2x2!", true, false, 13, 1, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 914), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "VecToso3", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 121), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "AbstractArray{Complex{Float32},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "TestIfSO3", true, true, 0, 1, "Bool", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 510), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checkeltype_transpose", true, true, 1, 1, "Nothing", "Type{Float64},Type{Float64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 84), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm2", true, true, 0, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 538), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "ProjectToSO3", true, true, 1, 1, "Array{Float64,2}", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 439), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "Normalize", true, true, 0, 1, "Array{Float64,1}", "Array{Float64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 85), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm2", true, true, 0, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 538), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "promote_leaf_eltypes", true, true, 0, 1, "Type{Float64}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 1623), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,AbstractArray{Complex{Float64},2},DenseArray{Complex{Float64},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checknonsingular", true, true, 0, 1, "Bool", "Int32", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/factorization.jl", 21), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "ProjectToSE3", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 464), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "triu!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 415), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,Base.ReinterpretArray{Float32,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm2", true, true, 14, 3, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 476), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, false, 2, 1, "Nothing", "LinearAlgebra.MulAddMul,Int64,Array{Int64,2},Tuple{Int64,Int64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, false, 0, 1, "Int64", "Base.ReshapedArray{Float64,1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "__init__", true, false, 2, 1, "Nothing", "", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 436), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "fzero", false, false, 1, 2, "Any", "Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{T},Nothing,typeof(-),_B} where _B<:Tuple where T", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 120), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm1", true, true, 0, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 537), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copytri!", true, true, 0, 1, "Array{Float64,2}", "Array{Float64,2},Char", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 435), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "fzeropreserving", false, false, 1, 2, "Any", "Base.Broadcast.Broadcasted{LinearAlgebra.StructuredMatrixStyle{T},Nothing,typeof(-),_B} where _B<:Tuple where T", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/structuredbroadcast.jl", 109), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "normInf", true, true, 0, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 536), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra.BLAS", "nrm2", true, true, 0, 1, "Float64", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/blas.jl", 419), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "VecTose3", true, true, 0, 1, "Array{Float64,2}", "Array{Int64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 281), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_matmatmul!", true, true, 23, 4, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 713), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, false, 0, 1, "Int64", "Base.ReshapedArray{Complex{Float32},1,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Complex{Float64},1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "copytri!", true, true, 22, 1, "Array{Float64,2}", "Array{Float64,2},Char,Bool,Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 435), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "chkstride1", true, false, 0, 1, "Bool", "AbstractArray{Float64,2},DenseArray{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 201), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "tril!", true, true, 6, 1, "Array{Float64,2}", "Array{Float64,2},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 171), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 3, 4, "Float64", "Float64,Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 647), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "mul!", true, true, 0, 1, "Array{Int64,2}", "Array{Int64,2},Array{Int64,2},Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 207), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", true, true, 0, 1, "Int64", "DenseArray{Float32,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 199), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm1", true, true, 0, 1, "Float64", "Array{Int64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 537), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, true, 1, 1, "Bool", "Bool", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 202), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "stride1", false, false, 0, 1, "Any", "Base.ReinterpretArray{Float32,1,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 197), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, true, 0, 1, "Bool", "Bool,Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_modify!", true, false, 2, 1, "Nothing", "LinearAlgebra.MulAddMul,Bool,Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 75), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "#lu#136", true, true, 0, 1, "LinearAlgebra.LU{Float64,Array{Float64,2}}", "Bool,typeof(LinearAlgebra.lu),Array{Float64,2},Val{true}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/lu.jl", 270), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_generic_matmatmul!", true, true, 151, 2, "Array{Int64,2}", "Array{Int64,2},Char,Char,Array{Int64,2},Array{Int64,2},LinearAlgebra.MulAddMul{true,true,Bool,Bool}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 734), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "se3ToVec", true, true, 0, 1, "Array{Int64,1}", "Array{Int64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 300), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_chkstride1", true, false, 0, 1, "Bool", "Bool,SubArray{Float32,1,A,I,L} where L where I<:Tuple{Vararg{Union{Int64, AbstractRange{Int64}, Base.AbstractCartesianIndex, Base.ReshapedArray{T,N,A,Tuple{}} where A<:AbstractUnitRange where N where T},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, Base.ReshapedArray{T,N,A,MI} where MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N} where N} where A<:Union{Base.ReinterpretArray{T,N,S,A} where S where A<:Union{SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, SubArray{T,N,A,I,true} where I<:Union{Tuple{Vararg{Real,N} where N}, Tuple{AbstractUnitRange,Vararg{Any,N} where N}} where A<:DenseArray where N where T, DenseArray} where N where T, DenseArray}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 203), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checkeltype_adjoint", true, true, 1, 1, "Nothing", "Type{Float64},Type{Float64}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/adjtrans.jl", 74), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "_generic_matmatmul!", true, false, 151, 2, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 734), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "AxisAng6", true, true, 1, 1, "Tuple{Array{Float64,1},Float64}", "Array{Int64,1}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 356), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", true, true, 2, 1, "Int64", "LinearAlgebra.LU{Float64,Array{Float64,2}}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 6, 7, "Float64", "Array{Float64,1},Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("ModernRoboticsBook", "DistanceToSE3", true, true, 1, 2, "Float64", "Array{Float64,2}", "/data/artem/stability/repo/Stability/pkgs/fresh6-10pkgs-ver/ModernRoboticsBook/depot/packages/ModernRoboticsBook/7T3UN/src/ModernRoboticsBook.jl", 490), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "generic_norm2", true, true, 14, 3, "Float64", "Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 476), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "diag", true, true, 0, 1, "Array{Float64,1}", "Array{Float64,2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 246), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "diagind", true, true, 0, 1, "StepRange{Int64,Int64}", "Int64,Int64", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/dense.jl", 200), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "matmul3x3!", true, false, 13, 1, "Array{Float64,2}", "Array{Float64,2},Char,Char,Array{Float64,2},Array{Float64,2},LinearAlgebra.MulAddMul", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/matmul.jl", 957), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "norm", true, true, 0, 1, "Float64", "Array{Int64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/generic.jl", 604), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "checksquare", false, false, 2, 1, "Any", "AbstractArray{Complex{Float64},2}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/LinearAlgebra.jl", 221), Stability.ModuleStatsPerInstanceRecord("LinearAlgebra", "promote_to_arrays_", true, true, 0, 1, "Array{Float64,1}", "Int64,Type{Array{T,2} where T},Array{Float64,1}", "/build/source/usr/share/julia/stdlib/v1.5/LinearAlgebra/src/uniformscaling.jl", 337)]
